{
  "version": 3,
  "file": "single-spa-angular-cli.umd.min.js",
  "sources": [
    "ng://single-spa-angular-cli/out/router/single-spa-router.service.ts",
    "ng://single-spa-angular-cli/out/router/single-spa-router-link.directive.ts",
    "ng://single-spa-angular-cli/out/single-spa.module.ts"
  ],
  "sourcesContent": [
    "import { Injectable } from '@angular/core';\n\ndeclare const location: any;\ndeclare const history: any;\n\n@Injectable()\nexport class SingleSpaRouterService {\n\n  constructor() { }\n\n  navigate(path: string, event?: Event): void {\n    history.pushState(null, null, path);\n    if (event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n}\n",
    "import { Directive, HostListener, Input, OnChanges, SimpleChanges, HostBinding } from '@angular/core';\n\nimport { SingleSpaRouterService } from './single-spa-router.service';\n\n@Directive({\n  selector: '[singleSpaRouterLink]'\n})\nexport class SingleSpaRouterLinkDirective implements OnChanges {\n\n  @Input() public singleSpaRouterLink: string;\n  @HostBinding('href') private href: string;\n\n  constructor(\n    private singleSpaRouterService: SingleSpaRouterService\n  ) { }\n\n  @HostListener('click', ['$event']) onClick($event: Event) {\n    this.singleSpaRouterService.navigate(this.singleSpaRouterLink, $event);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.href = this.singleSpaRouterLink;\n  }\n\n}\n",
    "import { NgModule, ElementRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SingleSpaRouterLinkDirective } from './router/single-spa-router-link.directive';\nimport { SingleSpaRouterService } from './router/single-spa-router.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    SingleSpaRouterLinkDirective\n  ],\n  exports: [\n    SingleSpaRouterLinkDirective\n  ],\n  providers: [\n    SingleSpaRouterService\n  ]\n})\nexport class SingleSpaModule { }\n"
  ],
  "names": [
    "SingleSpaRouterService",
    "prototype",
    "navigate",
    "path",
    "event",
    "history",
    "pushState",
    "stopPropagation",
    "preventDefault",
    "type",
    "Injectable",
    "SingleSpaRouterLinkDirective",
    "singleSpaRouterService",
    "this",
    "onClick",
    "$event",
    "singleSpaRouterLink",
    "ngOnChanges",
    "changes",
    "href",
    "Directive",
    "args",
    "selector",
    "Input",
    "HostBinding",
    "HostListener",
    "SingleSpaModule",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports",
    "providers"
  ],
  "mappings": "4TAAA,IAAAA,EAAA,WAQE,SAAFA,YAEEA,EAAFC,UAAAC,SAAE,SAASC,EAAcC,GACrBC,QAAQC,UAAU,KAAM,KAAMH,GAC1BC,IACFA,EAAMG,kBACNH,EAAMI,qBAdZ,kBAKAC,KAACC,EAAAA,mDCLD,IAAAC,EAAA,WAYE,SAAFA,EACYC,GAAAC,KAAZD,uBAAYA,SAGyBD,EAArCV,UAAAa,QAAqC,SAAQC,GACzCF,KAAKD,uBAAuBV,SAASW,KAAKG,oBAAqBD,IAGjEJ,EAAFV,UAAAgB,YAAE,SAAYC,GACVL,KAAKM,KAAON,KAAKG,uBArBrB,kBAIAP,KAACW,EAAAA,UAADC,OACEC,SAAU,gEAHZb,KAAST,uBAOTgB,sBAAAP,KAAGc,EAAAA,QACHJ,OAAAV,KAAGe,EAAAA,YAAHH,MAAe,UAMfP,UAAAL,KAAGgB,EAAAA,aAAHJ,MAAgB,SAAU,cChB1B,IAAAK,EAAA,4BAMAjB,KAACkB,EAAAA,SAADN,OACEO,SACEC,EAAAA,cAEFC,cACEnB,GAEFoB,SACEpB,GAEFqB,WACEhC"
}
